{"version":3,"sources":["images/todo.svg","components/todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","input","setInput","localStorage","getItem","JSON","parse","item","setItem","toggleSubmit","setToggleSubmit","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","stringify","className","src","todo","alt","type","class","autocomplete","placeholder","value","onChange","event","target","onKeyPress","key","title","onClick","ele","newEditItem","find","editItem","ind","updateditems","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d0fc9c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.975e4dd4.svg\";","import React, { useState, useEffect } from 'react';\r\nimport todo from '../images/todo.svg';\r\nimport './todo.css'\r\n\r\n\r\n\r\nconst Todo = () => {\r\n    const uselocalstorage = () => {\r\n        let list = localStorage.getItem('lists');\r\n        if (list) {\r\n            return JSON.parse(localStorage.getItem('lists'));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    const [input, setInput] = useState('');\r\n    const [item, setItem] = useState(uselocalstorage());\r\n    const [toggleSubmit, setToggleSubmit] = useState(true);\r\n    const [isEditItem, setIsEditItem] = useState(null);\r\n\r\n\r\n\r\n    const addItem = () => {\r\n        if (!input) {\r\n            alert('Please input the value');\r\n        } else if (input && !toggleSubmit) {\r\n            setItem(item.map((elem) => {\r\n                if (elem.id === isEditItem) {\r\n                    return { ...elem, name: input }\r\n                }\r\n                return elem;\r\n\r\n\r\n            }))\r\n            setToggleSubmit(true);\r\n\r\n            setInput('');\r\n\r\n            setIsEditItem(null);\r\n\r\n        }\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name:input }\r\n            setItem([...item, allInputData]);\r\n            setInput('')\r\n        }\r\n        \r\n    }\r\n\r\n    const keypress = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            if (!input) {\r\n                alert('Please input the value');\r\n            } else if (input && !toggleSubmit) {\r\n                setItem(item.map((elem) => {\r\n                    if (elem.id === isEditItem) {\r\n                        return { ...elem, name: input }\r\n                    }\r\n                    return elem;\r\n    \r\n    \r\n                }))\r\n                setToggleSubmit(true);\r\n    \r\n                setInput('');\r\n    \r\n                setIsEditItem(null);\r\n    \r\n            }\r\n            else {\r\n                const allInputData = { id: new Date().getTime().toString(), name:input }\r\n                setItem([...item, allInputData]);\r\n                setInput('')\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n\r\n\r\n    const deleteItem = (ind) => {\r\n        const updateditems = item.filter((ele) => {\r\n            return ind !== ele.id;\r\n\r\n        });\r\n\r\n        setItem(updateditems);\r\n    }\r\n\r\n    const removeAll = () => {\r\n        setItem([]);\r\n    }\r\n\r\n    const editItem = (id) => {\r\n        let newEditItem = item.find((elem) => {\r\n            return elem.id === id\r\n        });\r\n        setToggleSubmit(false);\r\n\r\n        setInput(newEditItem.name);\r\n\r\n        setIsEditItem(id);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(item))\r\n    }, [item]);\r\n\r\n    return (\r\n        <>\r\n            <div className='main-div'>\r\n                <div className='child-div'>\r\n                    <figure>\r\n                        <img src={todo} alt='todo' />\r\n\r\n                        <figcaption>Add Your Items Here ‚úç : </figcaption>\r\n\r\n                    </figure>\r\n                    <div className='addItems'>\r\n                        <input type='text' id='input' class=\" is-invalid\" autocomplete=\"off\" placeholder='Add Items...'\r\n\r\n                            value={input}\r\n                            onChange={(event) => {\r\n                                setInput(event.target.value);\r\n\r\n                            }}\r\n                            onKeyPress={keypress}\r\n                        />\r\n                        {\r\n                            toggleSubmit ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\" onClick={addItem}></i> :\r\n                                <i className=\"far fa-edit add-btn\" title=\"Update Item\" onClick={addItem}></i>\r\n                        }\r\n                    </div>\r\n                    <div className='showItems'>\r\n                        {\r\n                            item.map((ele) => {\r\n                                return (\r\n                                    <div className='eachItem' key={ele.id} >\r\n                                        <h3>{ele.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\" onClick={() => editItem(ele.id)\r\n                                            }></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\"\r\n                                                onClick={() => deleteItem(ele.id)}></i>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n                    {/* clear all button  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\" onClick={removeAll}><span><strong>CHECK LIST</strong>  </span> </button>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","\nimport Todo from './components/todo'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <Todo/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}